LIHAT git merge !!!
  public static IAutoSave getAutoSave() {
//        TODO: Penggunaannya di kelas ini :
//        RealProject
//        ProjectFactory
//        dipakai buat enable/disable
//Core.getAutoSave().enable() OR Core.getAutoSave().disable()

        return saveThread;
    }
--------------------
BERES
Core.getEditor() ditemukan di 49 files, mungkin saja files itu classes
, di kelas-kelas ini juga nanti ditambahkan import org.omegat.core.DependOnMainWindow;
CommandVarExpansion.java
LastSegmentManager.java
...dan lain-lain, lihat saja git merge utk mengetahui 49 kelas tersebut
--------------------

1. Move Method
adakah di core.java ?

 ------------------------------------------------------------------------
2. Move Field
adakah di core.java ?

 ------------------------------------------------------------------------
3. Change Bidirectional Association to Unidirectional
adakah di core.java ?

------------------------------------------------------------------------
4. Extract Class (EC) :
adakah di core.java ?

 ------------------------------------------------------------------------
5. Hide Delegate (HD): use it to let another class act as go-between.
adakah di Core.java ?


Client : class MainWindowMenuHandler

client jadi mengetahui semua yg ada di Core.getMachineTranslatePane() (class MachineTranslateTextArea)

HD menurunkan CBO.

------------------------
6. Replace Delegation with Inheritance RDwI
RDwi menurunkan CBO dgn meningkatkan DIT

pada kasus core,RDwI tidak ditemukan

Next?
Mana kode yang mengindikasikan delegasi? Buka core.java

Semuanya coupling karena ada me = new MainWindow();

Kita harus mencari pemakaian Core.blabla
(Labour Intensive wkwkw)
-----------------------------------


Mari kita lihat mana code yg bisa di-replace dengan inheritance

Delegasi dibuat karena tidak semua kode mesti dibuat dalam inheritance

class A{
    a()
    b()
    c()
}
class B extends A{
    @override
    b()
    @override
    c()
}
maka delegasi lebih cocok untuk kode diatas
-----------------------------------
Delegation vs inheritance bandingkan secara CBO?
CBO berkurang saat kita buat ubah delegasi jadi inheritance

Sekarang lagi mencoba  core/samples/[delegation vs inheritance]
salah satu refactoring InIn adalah replace delegation with inheritance

CBO bukan akumulasi semua CBO_method tapi akumulasi ada distinction juga,
jika object yang terlibat cuman 1 ,maka yang 1 itu tidak akan diulangi lagi

ga ada kaitan antara atribut milik class dengan CBO,
CBO mulai ditandai saat instance creation ex: a = new A()

----------------------------------------------------
MainWindow me = new MainWindow();
mainWindow = me;
...
machineTranslatePane = new MachineTranslateTextArea(me);

//saat menu pane machineTranslation di klik , selanjutnya?
public static MachineTranslateTextArea getMachineTranslatePane() {
    return machineTranslatePane;
}

siapa saja yang memanggil getMachineTranslatePane?
//MainWindowMenuHandler.java
...
String tr = Core.getMachineTranslatePane().getDisplayedTranslation();
if (tr == null) {
  Core.getMachineTranslatePane().forceLoad();
}
...
Bisa ga dibuat lewat Core? jadi harus lewat Core semuanya. Ayo coba refactor !!
//langsung lewat objectnya 
MachineTranslateTextArea.new.forceLoad




-------------------------------------------------
5-12-19
> 12.30
paper alshayeb metric nya : 

Reduce coupling by fowler
@article{fowler2001reducing,
  title={Reducing coupling},
  author={Fowler, Martin},
  journal={IEEE Software},
  number={4},
  pages={102--104},
  year={2001},
  publisher={IEEE}
}
-------------------------------------------------
< 12.30
an explanation about CBO is in diary.
What is the ideal CBO threshold? CodeMR give 
formula for In-In?
InIn = CBO > 30 ^ apalagi metric object?

coupling apa saja ? 
coba periksa paper impact of refactoring?

----------------------------------------
4-12-19
omegat ini versinya 5.2.0 (dev)

Core.initializeGUI() dijalankan di class Main.
Dalam Method Core.initializeGUI() ada 17 instansiasi object.
Itulah yang menyebabkan high coupling
Apakah adanya kelas Core/GUI dengan banyak coupling itu aman-aman saja kah?

https://stackoverflow.com/questions/579454/big-class-decomposition-in-java